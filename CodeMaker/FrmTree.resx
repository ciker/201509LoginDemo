<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="treeImgs.ImageStream" mimetype="application/x-microsoft.net.object.binary.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFdTeXN0ZW0uV2luZG93cy5Gb3JtcywgVmVyc2lvbj00LjAuMC4w
        LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkFAQAAACZTeXN0
        ZW0uV2luZG93cy5Gb3Jtcy5JbWFnZUxpc3RTdHJlYW1lcgEAAAAERGF0YQcCAgAAAAkDAAAADwMAAAC0
        FAAAAk1TRnQBSQFMAgEBCgEAAQ4BAAEIAQABFAEAARABAAT/AQkBEAj/AUIBTQE2AQQGAAE2AQQCAAEo
        AwABUAMAATADAAEBAQABCAYAAQ8YAAGAAgABgAMAAoABAAGAAwABgAEAAYABAAKAAgADwAEAAcAB3AHA
        AQAB8AHKAaYBAAEzBQABMwEAATMBAAEzAQACMwIAAxYBAAMcAQADIgEAAykBAANVAQADTQEAA0IBAAM5
        AQABgAF8Af8BAAJQAf8BAAGTAQAB1gEAAf8B7AHMAQABxgHWAe8BAAHWAucBAAGQAakBrQIAAf8BMwMA
        AWYDAAGZAwABzAIAATMDAAIzAgABMwFmAgABMwGZAgABMwHMAgABMwH/AgABZgMAAWYBMwIAAmYCAAFm
        AZkCAAFmAcwCAAFmAf8CAAGZAwABmQEzAgABmQFmAgACmQIAAZkBzAIAAZkB/wIAAcwDAAHMATMCAAHM
        AWYCAAHMAZkCAALMAgABzAH/AgAB/wFmAgAB/wGZAgAB/wHMAQABMwH/AgAB/wEAATMBAAEzAQABZgEA
        ATMBAAGZAQABMwEAAcwBAAEzAQAB/wEAAf8BMwIAAzMBAAIzAWYBAAIzAZkBAAIzAcwBAAIzAf8BAAEz
        AWYCAAEzAWYBMwEAATMCZgEAATMBZgGZAQABMwFmAcwBAAEzAWYB/wEAATMBmQIAATMBmQEzAQABMwGZ
        AWYBAAEzApkBAAEzAZkBzAEAATMBmQH/AQABMwHMAgABMwHMATMBAAEzAcwBZgEAATMBzAGZAQABMwLM
        AQABMwHMAf8BAAEzAf8BMwEAATMB/wFmAQABMwH/AZkBAAEzAf8BzAEAATMC/wEAAWYDAAFmAQABMwEA
        AWYBAAFmAQABZgEAAZkBAAFmAQABzAEAAWYBAAH/AQABZgEzAgABZgIzAQABZgEzAWYBAAFmATMBmQEA
        AWYBMwHMAQABZgEzAf8BAAJmAgACZgEzAQADZgEAAmYBmQEAAmYBzAEAAWYBmQIAAWYBmQEzAQABZgGZ
        AWYBAAFmApkBAAFmAZkBzAEAAWYBmQH/AQABZgHMAgABZgHMATMBAAFmAcwBmQEAAWYCzAEAAWYBzAH/
        AQABZgH/AgABZgH/ATMBAAFmAf8BmQEAAWYB/wHMAQABzAEAAf8BAAH/AQABzAEAApkCAAGZATMBmQEA
        AZkBAAGZAQABmQEAAcwBAAGZAwABmQIzAQABmQEAAWYBAAGZATMBzAEAAZkBAAH/AQABmQFmAgABmQFm
        ATMBAAGZATMBZgEAAZkBZgGZAQABmQFmAcwBAAGZATMB/wEAApkBMwEAApkBZgEAA5kBAAKZAcwBAAKZ
        Af8BAAGZAcwCAAGZAcwBMwEAAWYBzAFmAQABmQHMAZkBAAGZAswBAAGZAcwB/wEAAZkB/wIAAZkB/wEz
        AQABmQHMAWYBAAGZAf8BmQEAAZkB/wHMAQABmQL/AQABzAMAAZkBAAEzAQABzAEAAWYBAAHMAQABmQEA
        AcwBAAHMAQABmQEzAgABzAIzAQABzAEzAWYBAAHMATMBmQEAAcwBMwHMAQABzAEzAf8BAAHMAWYCAAHM
        AWYBMwEAAZkCZgEAAcwBZgGZAQABzAFmAcwBAAGZAWYB/wEAAcwBmQIAAcwBmQEzAQABzAGZAWYBAAHM
        ApkBAAHMAZkBzAEAAcwBmQH/AQACzAIAAswBMwEAAswBZgEAAswBmQEAA8wBAALMAf8BAAHMAf8CAAHM
        Af8BMwEAAZkB/wFmAQABzAH/AZkBAAHMAf8BzAEAAcwC/wEAAcwBAAEzAQAB/wEAAWYBAAH/AQABmQEA
        AcwBMwIAAf8CMwEAAf8BMwFmAQAB/wEzAZkBAAH/ATMBzAEAAf8BMwH/AQAB/wFmAgAB/wFmATMBAAHM
        AmYBAAH/AWYBmQEAAf8BZgHMAQABzAFmAf8BAAH/AZkCAAH/AZkBMwEAAf8BmQFmAQAB/wKZAQAB/wGZ
        AcwBAAH/AZkB/wEAAf8BzAIAAf8BzAEzAQAB/wHMAWYBAAH/AcwBmQEAAf8CzAEAAf8BzAH/AQAC/wEz
        AQABzAH/AWYBAAL/AZkBAAL/AcwBAAJmAf8BAAFmAf8BZgEAAWYC/wEAAf8CZgEAAf8BZgH/AQAC/wFm
        AQABIQEAAaUBAANfAQADdwEAA4YBAAOWAQADywEAA7IBAAPXAQAD3QEAA+MBAAPqAQAD8QEAA/gBAAHw
        AfsB/wEAAaQCoAEAA4ADAAH/AgAB/wMAAv8BAAH/AwAB/wEAAf8BAAL/AgAD/xgAAfABBwHsAeoBEwFt
        Ae1IAAHsAW0B7QG8AfQB/wHyAZIBFQGSAQcxAAG0A60BiwqGAbUDAAHrAewBBwf/AW0B7QG8MAACtAL0
        A/MFGQHdAQkBiwG1AgAB9AHqAu8BQwERAe8B6wEVARMB7AHxAZIB7DAAAbQBtQHyCIsBtAIJAYsBtQIA
        Ae8B7AHvAesBEQHyAewBQwETAQcBkgHsAQcBtQOGAmYBrioAAbQBtQH/AvQG8wEZAd0BCQGLAbUCAAHs
        Ae8B8gGSAREBvAH0AesBFAGSAf8B6wHvAfQBGQHxAt0BtQGuKgABtAG1AfICiwK7AosBCQIZAt0BrgG1
        AgAC7AG8AQcBEgHqAfEB7wFtARIB/wLvAbQCrQEJAd0BtQGuKgABtAG1Av8C9APzBRkBrgG1AgAB7wES
        Ae8B/wG8AREB9wEHAesBQwH0AbwC7wHyARkB8gHdAbUBrioAAdsB3AP/A/QBGQLzAxkBrgG1AgABTwFD
        AewB8QH/AfQB+AJtAesBBwHsAa4BtQEZAfMB8gHdAbUBrioAAgkB8gKLAbsB9AH/AfQBGQLzAhkBkQG1
        AgABTwEHAusB8AT/AfQBvAESAfcB9AHzAvEB3QG1Aa4qAAIJAfYF/wH0A/MCGQGRAbUCAAFPAQcB8QGS
        ARQBbQH3AQcB7wHrARUBBwHzAvQB8wHyAfEBtQGuKgABuwG0AtUB1AitAYsBrQG1AgABTwEHAgABBwGz
        AfcB7QGuAbUB9AH/BPQCGQHcAc8qAAG7AbUBCQTcAdUB3AXVAa0BtQIAAU8BBwKXAe4B1QHzBf8E9ALz
        AdwBzyoAAQcBtQK0AdUE1AatAbUDAAFyAk8BcQTVAbMJrQHPPgAClwHuAdUECQbWA9UBz0AAAe4BtQTV
        BLMFrQHPLQAB+AHrAW0B6gETARUBEQEPBw4UAA1mAa4fAAHsAZoBegFYBVIBUQFLASoCSwEPFAABZgHu
        CvMB7AGuCAAB7wH4DWYBkgcAAewBoAKaBHoBWQFTAlIBMQFLARECAAHvAfgNZgGSAgABZgHwAbUB9wHx
        AbwB7wEHAfAB7gGuAQcB+AZmAeoCAAHvAe4B/wHzAfIC8QLdBQkBiwGSBwAB7AHDAaACmgN6AlkBUwJS
        ASoBQwIAAe8B7gH/AvEB8AK8BQkBuwHqAZICAAFmAvABkgHsAfMC8gEHAa4BvAHxAq4DtQH3AfgB6gIA
        Ae8B7gP/Ae8E7AEHAfMB8gEJAYsBkgcAAe0BwwKgApoDegJZAVMBUgExARQCAAHvAe4B9AG1AfcB8AHu
        ApEB7gH3Aq4BuwHqAZICAAFmAfAB8gLwAfMC8gHxAbwC8QKuAQkCtAG7AZEB6gIAAe8B7gb/A/QB8wHy
        AQkBiwGSBwAB7QHDA6ABmgR6AlkBUgExARICAAEHAbwG/wH0AxkB8AG7AeoBkgIAAWYB8ALyAv8D9AH/
        AfQB8wHsAa4B3QO7AZEB6gIAAe8B7gP/Ae8E7AEHAvQB3QGuAZIHAAEcA8MBoAKaBHoBWQFSATEB6gIA
        AQcB8AH0AbUB9wHxAbwCkQHwAbUCrgEHAeoBkgIAAWYB8ALyAf8C9AHzAfQB/wHzAfIB7AGuARkCtQG7
        AZEB6gIAAQcBvAr/AfQB3QGuAZIHAAEcA8MCoAKaBHoBWQFSAesCAAEHAbwH/wL0AfMBGQEHAeoBkgIA
        AWYB8AHyAQcB7wP0AfAB7wLzAewBrgEZAbsBtQG7AZEB6gIAAQcBvAP/Ae8E7AG8Av8B8QHqAZIHAAEc
        BcMCoAKaBHoB6wIAAQcB8AH0AbUB9wHxAbwCkQHzAbUCrgEHAeoBkgIAAWYB8AHuAfcB7wP0AfAB9wHv
        AfEB7AGuARkDuwGRAeoCAAEHAbwL/wHxAeoBkgcAChwE7QMAAQcB8Ar/AvQBrgGSAgABZgHwArsB/wPz
        AfQB8wHtAfAC7AHyArUBBwHtAeoCAAEHAfAD/wHvBOwBvAL/AfMBrgGSBwABHAEaAsMBoAGaARwKAAEJ
        AtwJ1QOtAbUCAAFmAe8CBwi8AfgB7AHzArwBBwHtAeoCAAEHAfAM/wGuAZIIAAUcCwABCQHcAgkE3AbV
        Aa0BtQIAAoYCrgnsAe8B9AK1AQcB7QHqAgABCQPWAbUFtAWtAbUYAAEJAtwJ1QOtAbUEAAEHAbwH9AcZ
        AbUB6gIAAQkB1gIJA9wB1gbVAa0BtSwAAQkE1gXVB60BzwIAAQkD1gG1BbQFrQG1LAABCQHWAgkF3AHW
        B9UBzz4AAQkH1gHVBbQDrQHPKwAC8AH0AfIB8QHwAbwDBwHvAfcB7QGuAe8IAAEcAnMBUQFLAUoBbgFz
        ARwKAAH4AesBbQHqARMBFQERAQ8HDgYAAc8IpwHHAaEDpwYAAa4B7gH0AfIB8AEHAewBhgGnCAABmQFS
        AVgBegKgAZoBWQQxAUsBBwgAAewBmgF6AVgFUgFRAUsBKgJLAQ8GAAHPAbUBBwHvAfcBtQH3AZIB7QGR
        Aq4BhgGnApEHrgHqBWwEZgHqAwABeQE4AVkBegKgAeUBWQUxAZkIAAHsAaACmgR6AVkBUwJSATEBSwER
        BgABzwEHAbwBmAF5ARoBvAEHAbUB9wG1Aa4BhgGnAZEB8AHyAfEB8AK8AgcFtQKRAU4BbAKuAwABeQE4
        AnoCoAGaAVkFMQGZCAAB7AHDAaACmgN6AlkBUwJSASoBQwEABM8BrQG1AbwBGwHCARoB8wHxAfABvAEH
        AQkBtQGGAacB7QHvAbwP8AHvAZEDAAF5ATgBWQF6AqABmgFZBTEBmQgAAe0BwwKgApoDegJZAVMBUgEx
        ARQBAAG7ArwB7wUHAbUB9wGSAu0B7AGuAbUBzwGnAfcBrgG0BtUFrQWLAZEDAAF5ATgBWQF6AqABmgFZ
        BTEBmQgAAe0BwwOgAZoEegJZAVIBMQESAQABBwHwAQgBeAGZAe4BBwG8At0BCQK7AbUB9wGRAa0CpwH3
        AZEBtAfVBa0DiwGuAfcDAAF5ATgBWQF6AqABmgFZBTEBmQgAARwDwwGgApoEegFZAVIBMQHqAQABBwHy
        Av8C9AEZAdwC1QHOA60BiwGuAacBzwEAAfcBkQG1AdYG1QHUBa0CiwGuAbUDAAF5ATgBWQF6AqABmgFZ
        BTEBmQgAARwDwwKgApoEegFZAVIB6wEAAQkBBwLvAfcBkQK1A9UDrQGLAa4BpwHPAQABtQGRAbsB3AHW
        BtUBswWtAYsBrgHvAwABeQE4AVkBegKgAZoBWQUxAZkIAAEcBcMCoAKaBHoB6wEAAacBzwYJAdwB1gPV
        Aq0BrgGnAc8BAAHvAZEBuwLcB9UCswStAc8BtQMAAXkBOAFZAXoCoAGaAVkFMQGZCAAKHATtAgABpwHP
        AbUC1QGtAbQBCQLcA9UBzgGtAbQBrQHPAQABtQGSAbsD3AjVAbMDrQHPAbUDAAF5ATgBWQF6AqABmgFZ
        BTEBmQgAARwBGgLDAaABmgEcCQABrQG0AdwD1QHcAwkB1gK1A7QBrQHPAQABtQH3AbsBCQPcCNUBswKt
        Ac8BtQMAAXkBOAFZAXoCoAGaAVkBOAQxAZkJAAUcCgABrQG0AQkB3AHWA9UCtAG1Ac8EpwGhAc8BAAHv
        AfcBuwIJBNwH1QKtAc8BtQMAARoBegGgBsMCoAF6AVIBBxgAAc8BtAEJAdYE1QKtAbQBuwcAAQcB9wG7
        AgkF3AfVAa0BtAEHAgABvAEaAaAKwwGZAbwYAAHPAbUB8AIJAbsEtQG0AbsHAAEHAfQE/wL0AvMB8gLx
        AfACvAQHBAABvAqZaQABQgFNAT4HAAE+AwABKAMAAVADAAEwAwABAQEAAQEFAAFAAQIWAAP/AQAC/wH+
        AQMB/wcAAv8B/AEAAX8HAAHAAQABOAEAAT8HAAHAAQABMAEAAT8HAAHAAQABMAkAAcABAAEwCQABwAEA
        ATAJAAHAAQABMAkAAcABAAEwCQABwAEAATAJAAHAAQABMAkAAcABAAEzCQABwAEAATAJAAHAAQABOAkA
        Av8B/AkAA/8JAAH4AQABDwL/AQABAwP/AgAB+AEAAQ8C/wEAAQMB/AEAAQMCAAH4AQABDAEAAQMCAAEM
        AQABAwIAAfgBAAEMAQABAwIAAQwBAAEDAgAB+AEAAQwBAAEDAgABDAEAAQMCAAH4AQABDAEAAQMCAAEM
        AQABAwIAAfgBAAEMAQABAwIAAQwBAAEDAgAB+AEAAQwBAAEDAgABDAEAAQMCAAH4AQABDAEAAQMCAAEM
        AQABAwIAAfgBAAEcAQABAwIAAQwBAAEDAgAB+AEPAfwBAAEDAgABDAEAAQMCAAH8AR8B/AEAAQMCAAEM
        AQABAwIAAv8B/AEAAQMBwAEAAQwBAAEDAgAF/wHAAQABDAEAAQMCAAX/AcABAAEPAv8CAAX/AcABAAEP
        Av8CAAL/Af4BAAEDAfwBAQH/AYADAAH8AQABDwHAAR8B4AEAAX8BgAMAAfwEAAHgAQABfwGAAwAB/AQA
        AeABAAF/AYADAAGABAAB4AEAAX8BgAMAAYAEAAHgAQABfwGAAwABgAQAAeABAAF/AYADAAGAAQABEAIA
        AeABAAF/AYADAAGAAQABEAIAAeABAAF/AYADAAGAAQABEAIAAeABAAF/AYABAQIAAYABAAEQAgAB4AEA
        AX8BgAH/AgABgAEAARACAAHgAQABfwHBAf8CAAGAAQABEAIAAeABAAF/Av8CAAGAAQcB8AIAAcABAAF/
        Av8CAAGAAQcB8AIAAfABAQP/AgAK/xgACw==
</value>
  </data>
</root>